library(tidyverse)
library(dslabs)
data(murders)
ggplot(data = murders)
## or
murders %>% ggplot()
p <- ggplot(data = murders)
class(p)
print(p)
p

## Layers
murders %>% ggplot() +
  geom_point(aes(x = population/10^6, y = total))
## Add points layer to predefined ggplot object
p <- ggplot(data = murders)
p + geom_point(aes(population/10^6, total))
## Add text layer to scatterplot
p + geom_point(aes(population/10^6, total)) + geom_text(aes(population/10^6, total, label = abb))
## No error from this call
p_test <- p + geom_text(aes(population/10^6, total, label = abb))
## Error - "abb" is not a globally defined variable and cannot be found outside of aes
p_test <- p + geom_text(aes(population/10^6, total), label = abb)

## Tinkering
## Change the size of the points
p + geom_point(aes(population/10^6, total), size = 3) + geom_text(aes(population/10^6, total, label = abb))
## Move text labels slightly to the right
p + geom_point(aes(population/10^6, total), size = 3) + geom_text(aes(population/10^6, total, label = abb), nudge_x = 1)
## Simplify code by adding global aesthetic
p <- murders %>% ggplot(aes(population/10^6, total, label = abb))
p + geom_point(size = 3) +
  geom_text(nudge_x = 1.5)
## Local aesthetics override global aesthetics
p + geom_point(size = 3) +
  geom_text(aes(x = 10, y = 800, label = "Hello there!"))
  
## Scales, Labels, and Colors
p <- murders %>% ggplot(aes(population/10^6, total, label = abb))
## log base 10 scale the x-axis and y-axis
p + geom_point(size = 3) +
  geom_text(nudge_x = 0.05) + 
  scale_x_continuous(trans = "log10") +
  scale_y_continuous(trans = "log10")
## Efficient log scaling of the axes
p + geom_point(size = 3) +
  geom_text(nudge_x = 0.075) +
  scale_x_log10() +
  scale_y_log10()
## Add labels and title
p + geom_point(size = 3) +
  geom_text(nudge_x = 0.075) +
  scale_x_log10() +
  scale_y_log10() +
  xlab("Population in millions (log scale)") +
  ylab("Total number of murders (log scale)") +
  ggtitle("US Gun Murders in 2020")
## Change Color of the Points
p <- murders %>%
  ggplot(aes(population/10^6, total, label = abb)) +
  geom_text(nudge_x = 0.075) +
  scale_x_log10() +
  scale_y_log10() +
  xlab("Population in millions (log scale)") +
  ylab("Total number of murders (log scale)") +
  ggtitle("US Gun Murders in 2010")
## Make all points blue
p + geom_point(size = 3, color = "blue")
## Add a line with average murder rate
## define average murder rate
r <- murders %>%
  summarize(rate = sum(total)/sum(population) * 10^6) %>%
              pull(rate)
## Basic line with average murder rate for the country
## Slope is default of 1
p <- p + geom_point(aes(col = region), size = 3) +
  geom_abline(intercept = log10(r))
## Change line to dashed and dark grey, line under points
p +
  geom_abline(intercept = log10(r), lty = 2, color = "darkgrey") +
  geom_point(aes(col = region), size = 3)
## Change legend title
## Capitalize legend title
p <- p + 
  scale_color_discrete(name = "Region")

## Add-on packages
## Theme used for graphs in the textbooks and course
library(dslabs)
ds_theme_set()
## Themes from ggthemes
library(ggthemes)
## Style of the Economist magazine
p + theme_economist()
## Style of the FiveThirtyEight website
p + theme_fivethirtyeight()
## load libraries
library(tidyverse)
library(ggrepel)
library(ggthemes)
library(dslabs)
data(murders)
## Define the intercept
r <- murders %>%
  summarize(rate = sum(total)/sum(population) * 10^6) %>%
  .$rate
## Making a plot, combining all elements
murders %>%
  ggplot(aes(population/10^6, total, label = abb)) +
  geom_abline(intercept = log10(r), lty = 2, color = "darkgrey") +
  geom_point(aes(col = region), size = 3) +
  geom_text_repel() +
  scale_x_log10() +
  scale_y_log10() +
  xlab("Population in millions (log scale)") +
  ylab("Total number of murders (log scale)") +
  ggtitle("US Gun Murders in 2010") +
  scale_color_discrete(name = "Region") +
  theme_economist()
